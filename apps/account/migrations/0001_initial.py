# Generated by Django 5.0.3 on 2024-07-02 05:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.CharField(blank=True, max_length=200, null=True, verbose_name='token')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='UZ', unique=True, verbose_name='phone number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Stories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('storie', models.FileField(help_text='Required. stories', upload_to='usr/account/stories/%Y/%m/%d', verbose_name='stories')),
                ('message', models.CharField(blank=True, max_length=120, null=True, verbose_name='messages')),
            ],
            options={
                'verbose_name': 'storie',
                'verbose_name_plural': 'stories',
                'db_table': 'stories',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_at'], name='stories_created_c866ff_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='usr/account/avatars/%Y/%m/%d', verbose_name='avatar')),
                ('bio', models.CharField(blank=True, max_length=70, null=True, verbose_name='bio')),
                ('first_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=70, null=True, verbose_name='last name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='UZ', unique=True, verbose_name='phone number')),
                ('username', models.CharField(max_length=120, verbose_name='username')),
                ('date_of_berth', models.DateField(blank=True, null=True, verbose_name='date of berth')),
                ('stories', models.ManyToManyField(blank=True, related_name='stories_user_account', to='account.stories')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user account',
                'verbose_name_plural': 'user accounts',
                'db_table': 'user_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavedMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(verbose_name='message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_saved_messages', to='account.useraccount')),
            ],
            options={
                'verbose_name': 'saved message',
                'verbose_name_plural': 'saved messages',
                'db_table': 'saved_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='useraccount',
            index=models.Index(fields=['created_at'], name='user_accoun_created_0b94f8_idx'),
        ),
        migrations.AddIndex(
            model_name='savedmessages',
            index=models.Index(fields=['created_at'], name='saved_messa_created_ec59ef_idx'),
        ),
    ]
